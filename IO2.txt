












































[18 Обмен в массиве элементов попарно. Если 1-е число больше 2-го меняем их местами.
Если 3-е число больше 4-го меняем их местами. И т.д.
ПРИМЕР ВХОДНЫХ ДАННЫХ: массив(10,9,8,7,6,5,4,3,2,1,5)
ОТВЕТ В ЯЧЕЙКАХ: 132 - 142]





T 56 K [ директива IO2, установка адреса загрузки ]
[ 0:] G K [ директива IO2, фиксация начального адреса подпрограммы ] A 3 F [ пролог: формирование кода инструкции возврата в Acc ]
[ 1:] T 59 [<ret>] @ [ пролог: запись инструкции возврата ]
[ 2:] A 0 [<addr>] F [ загрузка в аккумулятор адреса 0-го элемента массива ]
[ 3:] A 61 [<r1init>] @ [ прибавляем код инструкции с нулевым полем адреса ]
[ 4:] U 22 [<c1>] @ [ запись сформированной инструкции c1, обнуление аккумулятора ]
[ 5:] T 26 [<r1>] @ [ запись сформированной инструкции r1, обнуление аккумулятора ]
[ 6:] A 0 [<addr>] F [ загрузка в аккумулятор адреса 0-го элемента массива ]
[ 7:] A 62 [<w1init>] @ [ прибавляем код инструкции w1 с нулевым полем адреса ]
[ 8:] T 29 [<w1>] @ [ запись сформированной инструкции w1, обнуление аккумулятора ]
[ 9:] A 0 [<addr>] F [ загрузка в аккумулятор адреса 0-го элемента массива ]
[10:] A 63 [<r2init>] @ [ прибавляем код инструкции r2 с полем адреса 1 ]
[11:] T 28 [<r2>] @ [ запись сформированной инструкции r2, обнуление аккумулятора ]
[12:] A 0 [<addr>] F [ загрузка в аккумулятор адреса 0-го элемента массива ]
[13:] A 64 [<w2init>] @ [ прибавляем код инструкции w2 с полем адреса 1 ]
[14:] T 31 [<w2>] @ [ запись сформированной инструкции w2, обнуление аккумулятора ]
[15:] A 0 [<addr>] F [ загрузка в аккумулятор адреса 0-го элемента массива ]
[16:] A 65 [<c2init>] @ [ прибавляем код инструкции c2 с полем адреса 1 ]
[17:] T 23 [<c2>] @ [ запись сформированной инструкции c2, обнуление аккумулятора ]
[18:] [loop:] [20:] A 1 F [ загружаем счетчик необработанных элементов массива ]
[19:] S 60 [<c2>] @ [ уменьшаем на 2 ]
[20:] G 58 [<exit>] @ [ если результат меньше 0, завершаем работу ]
[21:] T 1 F [ обновляем значение счетчика и обнуляем аккумулятор ]
[22:] [c1:] A 0 F [ загрузка в аккумулятор значения из ячейки N ]
[23:] [c2:] S 1 F [ вычитание из аккумулятора значения из ячейки N+1 ]
[24:] G 32 [<reverse end>] @ [ если разность <0, то пропускаем блок перестановки ]
[25:] T 2 F [ очищаем аккумулятор ]
[26:] [r1:] A 0 F [ загрузка в аккумулятор значения из ячейки N ]
[27:] T 0 F [ запись этого значения в рабочую ячейку, обнуление аккумулятора ]
[28:] [r2:] A 1 F [ загрузка в аккумулятор значения из ячейки N+1 ]
[29:] [w1:] T 0 F [ запись этого значения в ячейку с адресом N, обнуление аккумулятора ]
[30:] A 0 F [ загрузка в аккумулятор значения из ячейки 0 ]
[31:] [w2:] T 1 F [ запись этого значения в ячейку с адресом N+1, обнуление аккумулятора ]
[32:] [reverse end:] T 2 F [ очищаем аккумулятор ]
[33:] A 60 [<c>] @ [ загрузка в аккумулятор константы 2 ]
[34:] L 0 D [ сдвиг на 1 разряд влево ]
[35:] A 22 [<c1>] @ [ прибавляем код инструкции c1, исполненной на предыдущем шаге ]
[36:] T 22 [<c1>] @ [ записываем сформированную инструкцию в память ]
[37:] A 60 [<c>] @ [ загрузка в аккумулятор константы 2 ]
[38:] L 0 D [ сдвиг на 1 разряд влево ]
[39:] A 23 [<c2>] @ [ прибавляем код инструкции c2, исполненной на предыдущем шаге ]
[40:] T 23 [<c2>] @ [ записываем сформированную инструкцию в память ]
[41:] A 60 [<c>] @ [ загрузка в аккумулятор константы 2 ]
[42:] L 0 D [ сдвиг на 1 разряд влево ]
[43:] A 26 [<r1>] @ [ прибавляем код инструкции r1, исполненной на предыдущем шаге ]
[44:] T 26 [<r1>] @ [ записываем сформированную инструкцию в память ]
[45:] A 60 [<c>] @ [ загрузка в аккумулятор константы 2 ]
[46:] L 0 D [ сдвиг на 1 разряд влево ]
[47:] A 29 [<w1>] @ [ прибавляем код инструкции w1, исполненной на предыдущем шаге ]
[48:] T 29 [<w1>] @ [ записываем сформированную инструкцию в память ]
[49:] A 60 [<c>] @ [ загрузка в аккумулятор константы 2 ]
[50:] L 0 D [ сдвиг на 1 разряд влево ]
[51:] A 28 [<r2>] @ [ прибавляем код инструкции r2, исполненной на предыдущем шаге ]
[52:] T 28 [<r2>] @ [ записываем сформированную инструкцию в память ]
[53:] A 60 [<c>] @ [ загрузка в аккумулятор константы 2 ]
[54:] L 0 D [ сдвиг на 1 разряд влево ]
[55:] A 31 [<w2>] @ [ прибавляем код инструкции w2, исполненной на предыдущем шаге ]
[56:] T 31 [<w2>] @ [ записываем сформированную инструкцию в память ]
[57:] E 18 [<loop>] @ [ повторяем все операции; аккумулятор обнулен ]
[58:] [exit:] T 0 F [ обнуление аккумулятора ]
[59:] [ret:] E 0 F [ эпилог: инструкция возврата из подпрограммы ]
[60:] [с:] P 1 F [ константа 2 ]
[61:] [r1init:] A 0 F [ основа для формирования инструкции с метками r1 и c1 ]
[62:] [w1init:] T 0 F [ основа для формирования инструкции с меткой w1 ]
[63:] [r2init:] A 1 F [ основа для формирования инструкции с меткой r2 ]
[64:] [w2init:] T 1 F [ основа для формирования инструкции с меткой w2 ]
[65:] [M2init:] S 1 F [ основа для формирования инструкции с меткой c2 ]
[ 0:] G K [ директива IO2, фиксация начального адреса программы ] X 0 F
[ 1:] A 8 [<addr>] @ [ загрузка в аккумулятор адреса массива ]
[ 2:] T 0 F [ запись адреса массива в ячейку 0, обнуление аккумулятора ]
[ 3:] A 9 [<len>] @ [ загрузка в аккумулятор длины массива ]
[ 4:] T 1 F [ запись длины массива в ячейку 1, обнуление аккумулятора ]
[ 5:] A 5 @          [\ вызов ]
[ 6:] G 56 [<sub>] F [/ подпрограммы ]
[ 7:] Z 0 F [ останов ]
[ 8:] P 10 [<array>] @ [ адрес массива ]
[ 9:] P 5 D [ длина массива - 11 ]
[10:] P 4 D [ 10 ]
[11:] P 5 F [ 9 ]
[12:] P 4 F [ 8 ]
[13:] P 3 D [ 7 ]
[14:] P 3 F [ 6 ]
[15:] P 2 D [ 5 ]
[16:] P 2 F [ 4 ]
[17:] P 1 D [ 3 ]
[18:] P 1 F [ 2 ]
[19:] P 0 D [ 1 ]
[20:] P 2 D [ 5 ]
 EZ PF [ директива IO2, переход к исполнению ]
